datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique
  username    String   @unique 
  name        String   
  password    String   
  avatar_url  String?
  provider    String   @default("EMAIL")
  bio         String?
  theme       String?
  created_at  DateTime @default(now()) @db.Timestamptz
  updated_at  DateTime @updatedAt @db.Timestamptz
  socialLinks SocialLink[]
  links        Link[]
  
  @@map("users")
}

model SocialLink {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  platform    String   
  handle      String
  url         String 
  order_index Int      @default(0)
  is_active   Boolean  @default(true) 
  created_at  DateTime @default(now()) @db.Timestamptz
  updated_at  DateTime @updatedAt @db.Timestamptz
  
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade) 

  @@unique([user_id, platform]) // Asumsi satu platform per user
  @@map("social_links")
}

model Link {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  title       String   // NOT NULL
  url         String   // url text NOT NULL
  order_index Int      @default(0)
  created_at  DateTime @default(now()) @db.Timestamptz
  updated_at  DateTime @updatedAt @db.Timestamptz
  
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  @@map("links")
}